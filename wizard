#!/bin/bash

: ${DIALOG=dialog}

: ${DIALOG_OK=0}
: ${DIALOG_CANCEL=1}
: ${DIALOG_HELP=2}
: ${DIALOG_EXTRA=3}
: ${DIALOG_ITEM_HELP=4}
: ${DIALOG_ESC=255}

: ${SIG_NONE=0}
: ${SIG_HUP=1}
: ${SIG_INT=2}
: ${SIG_QUIT=3}
: ${SIG_KILL=9}
: ${SIG_TERM=15}

set -e

DATABASE="${INSTALLER_DIR}/database"
touch "${DATABASE}"

wizard() {
	STATE="$1"
	while true; do
		OLDSTATE="$STATE"
		state_machine
		if [ "$OLDSTATE" = "$STATE" ]; then
			STATE="same-state"
		fi
	done
}

template() {
	local key="$1"
	local type="$2"
	case "$key" in
		"mysql/autoinstall")
			echo "menu"
			;;
	esac
}

wiz_set() {
	local key="$1"
	local value="$2"
	sed -i "s|${key}=.*||" "$DATABASE"
	echo "${key}=${value}" >> "$DATABASE"
}

wiz_ask() {
	for question in $wiz_buffer ; do
		wiz_dialog "$question"
	done
}

wiz_dialog() {
	local key="$1"
	local type=$(wiz_meta "$key" "type")
	local title=$(wiz_meta "$key" "title")
	local description=$(wiz_meta "$key" "$description")
	case "$type" in
		"menu")
			local choices=$(wiz_meta "$key" "choices")
			wiz_dialog_menu "$key" "$title" "$description" "$choices"
			;;
		"boolean")
			wiz_dialog_boolean "$key" "$title" "$description"
			;;
	esac
}

wiz_template() {
	echo "${INSTALLER_DIR}/addons/${1}/templates"
}

wiz_meta() {
	local key="$1"
	local attribute="$2"
	IFS='/' read -a array <<< "$key"
	local addon="${array[0]}"
	local tmpdir=$(mktemp -d)
	local addon_templates=$(wiz_template "${addon}")
	csplit -zs -f ${tmpdir}/item "$addon_templates" /^Template:/ {*}
	local template=""
	for file in ${tmpdir}/item* ; do
		if grep -q "Template: ${key}" ${file} ; then
			template="$file"
			break
		fi
	done

	if [ -z "$template" ] ; then exit 1 ; fi

	case "$attribute" in
		"type")
			sed -n -r 's|^Type: (.+)$|\1|p' "$template"
			;;
		"title")
			sed -n -r 's|^Description: (.+)$|\1|p' "$template"
			;;
		"default")
			sed -n -r 's|^Default: (.+)$|\1|p' "$template"
			;;
		"description")
			local description=$(grep -e "^\s" "$template" | xargs echo | sed -n -r "s| \. |\n|p")
			echo "$description"
			;;
		"choices")
			IFS=',' read -a choices <<< "$(sed -n -r 's|^Choices: (.+)$|\1|p' "$template" | sed -n -r 's|, |,|pg')"
			IFS=',' read -a translations <<< "$(sed -n -r 's|^Translations: (.+)$|\1|p' "$template" | sed -n -r 's|, |,|pg')"

			if [ -z "$translations" ]; then translations=$choices ; fi

			for ((i=0 ; i < ${#choices[@]}; i++)) ; do
				echo "\"${choices[$i]}\" \"${translations[$i]}\""
			done
			;;
		*)
			echo ""
			;;
	esac
}

wiz_put() {
	set +e
	local key="$1"
	echo "key: $key"
	echo $(template "$key" "type")
	case $(template "$key" "type") in
		"menu")
			result=$($DIALOG --stdout --clear --title "MENU BOX" \
        --menu "Hi, this is a menu box. You can use this to \n\
present a list of choices for the user to \n\
choose. If there are more items than can fit \n\
on the screen, the menu will be scrolled. \n\
You can use the UP/DOWN arrow keys, the first \n\
letter of the choice as a hot key, or the \n\
number keys 1-9 to choose an option.\n\
Try it now!\n\n\
          Choose the OS you like:" 20 51 4 \
        "skip"  "The Great Unix Clone for 386/486" \
        "install" "Another free Unix Clone for 386/486" \
        "use-existing-database" "IBM OS/2" \
        "WIN NT" "Microsoft Windows NT" \
        "PCDOS"  "IBM PC DOS" \
	"MSDOS"  "Microsoft DOS")
			case $? in
				$DIALOG_OK)
					wiz_set "$key" "$result"
					;;
				*)
					exit $?
					;;
			esac
			;;
		"boolean")
			if $DIALOG --title "mysql / setup" --clear \
				--yesno "Do you want to install MySQL?" 15 61 ; then
				wiz_set "$key" "true"
			else
				wiz_set "$key" "false"
			fi
			;;
	esac
	set -e
}

wiz_get() {
	local key="$1"
	grep "$key=" "$DATABASE" | cut -f 2 -d "="
}
