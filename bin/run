#!/bin/bash

set -e
set -o pipefail

: ${APP_NAME:?"Needs to set APP_NAME"}
: ${APP_HOME:?"Needs to set APP_HOME"}
: ${APP_SAFE_NAME:?"Needs to set APP_SAFE_NAME"}
: ${APP_USER:?"Needs to set APP_USER"}
: ${APP_GROUP:?"Needs to set APP_GROUP"}

export INSTALLER_DIR=${INSTALLER_DIR:="${APP_HOME}/.pkgr/installer"}
export DIALOG=${DIALOG:="dialog"}
export DIALOGRC="${INSTALLER_DIR}/debian.rc"
export CLI="${APP_NAME}"

unset WIZ_RECONFIGURE

while [[ $# > 1 ]]
do
	key="$1"
	shift

	case $key in
	    --reconfigure)
	    export WIZ_RECONFIGURE="yes"
	    ;;
	    *)
	    ;;
	esac
done

echo "Launching installer for ${APP_NAME}..."

echoerr() { echo "$@" 1>&2; }

IFS=',' read -a ADDON_GROUPS <<< "$ADDONS"

. "${INSTALLER_DIR}/wizard"

SELECTED_ADDONS=()

build_list_of_addons() {
	local i=0
	local addon_group
	local addon

	for (( i=0 ; i < ${#ADDON_GROUPS[@]} ; i++ )) ; do
		addon_group="${ADDON_GROUPS[i]}"
		echo "addon_group: ${addon_group}"
		IFS='|' read -a addons <<< "$addon_group"

		if [ ${#addons[@]} -gt 1 ] ; then
			# choose between addons
			joined_addons="$(wiz_join "_" "${addons[@]}")"
			wiz_put "installer/select_${joined_addons}"
			if wiz_ask ; then
				addon="$(wiz_get  "installer/select_${joined_addons}")"
				if [ "$addon" = "skip" ] ; then
					echo "skipping"
				else
					SELECTED_ADDONS+=("$addon")
				fi
			else
				echo "You must choose between $(wiz_join ", " "${addons[@]}") addons. Aborting."
				exit 1
			fi
		else
			SELECTED_ADDONS+=("${addons[0]}")
		fi
	done
}

for_each_addon() {
	for addon in ${SELECTED_ADDONS}; do
		echoerr "[${addon}] $@"
		( cd ${INSTALLER_DIR}/addons/${addon} && exec "$@" )
	done
}

# create various dirs directory
REQUIRED_DIRS="/etc/${APP_NAME}/conf.d /etc/${APP_NAME}/addons"
for dir in $REQUIRED_DIRS ; do
	mkdir -p "$dir" && chown ${APP_USER}.${APP_GROUP} "$dir"
done

build_list_of_addons
echo "Selected addons: ${SELECTED_ADDONS[@]}"

# execute configure scripts
for_each_addon ./bin/configure

# execute preinstall scripts
for_each_addon ./bin/preinstall

# execute postinstall scripts
for_each_addon ./bin/postinstall
